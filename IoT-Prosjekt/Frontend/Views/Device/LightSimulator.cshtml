@model List<Device>
@{
    ViewData["Title"] = "Simulator";
}

<div class="device-container">
    @foreach (var device in Model)
{
    if (device.Paired)
    {
        <div class="device-card">
            @if (device.State)
            {
                <form class="form-sim" asp-action="UpdateDeviceState" method="post">
                    <h2 class="name-sim">@device.Name</h2>
                    <input type="hidden" name="id" value="@device.Id"/>
                    <input type="hidden" name="state" value="false"/>
                    <img src="~/images/pic_bulbon.gif" alt="LightOn" onclick="this.closest('form').submit();"/>
                </form>

            }

            else
            {
                <form class="form-sim" asp-action="UpdateDeviceState" method="post">
                    <h2 class="name-sim">@device.Name</h2>
                    <input type="hidden" name="id" value="@device.Id"/>
                    <input type="hidden" name="state" value="true"/>
                    <img src="~/images/pic_bulboff.gif" alt="LightOff" onclick="this.closest('form').submit();"/>
                </form>
            } 
            </div>

    }
}
</div>



<script>
    // Definerer variabler for antall oppdateringer og intervaller
    let refreshCount = 0;
    const maxRefreshes = 100; // Hvor mange ganger siden skal oppdateres
    const refreshInterval = 1000; // Oppdateringsintervall i millisekunder (5000 ms = 5 sekunder)

    // Funksjon for å oppdatere siden
    function refreshPage() {
        if (refreshCount < maxRefreshes) {
            refreshCount++;
            location.reload(); // Oppdaterer hele siden
        } else {
            clearInterval(refreshTimer); // Stopper oppdateringen etter x ganger
        }
    }

    // Start tidsstyrt oppdatering av siden
    const refreshTimer = setInterval(refreshPage, refreshInterval);
</script>
